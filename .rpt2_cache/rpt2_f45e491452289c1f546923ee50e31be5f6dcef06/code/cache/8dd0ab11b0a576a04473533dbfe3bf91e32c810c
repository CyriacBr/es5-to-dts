{"code":"//#!/usr/bin/env node\r\nimport { createProgram, collectProperties, makePseudoClasses, makeDTS, setNamespace } from './generator';\r\nimport * as fs from 'fs';\r\nimport * as path from 'path';\r\nvar callerPath = process.cwd();\r\nvar fileName = process.argv[2];\r\nvar namespace = process.argv[3];\r\nsetNamespace(namespace || 'UnknownNamespace');\r\ntry {\r\n    var file = {\r\n        content: fs.readFileSync(path.resolve(callerPath, fileName)).toString(),\r\n        fileName: 'file1.ts'\r\n    };\r\n    var lib = {\r\n        content: fs\r\n            .readFileSync(path.resolve(__dirname, '../node_modules/typescript/lib/lib.es5.d.ts'))\r\n            .toString(),\r\n        fileName: 'lib.es2018.d.ts'\r\n    };\r\n    var program = createProgram([file, lib], {});\r\n    console.log(' - TS program created');\r\n    console.log(' - Collecting properties');\r\n    var properties = collectProperties(program);\r\n    console.log(' -> Done');\r\n    console.log(' - Collecting pseudo classes');\r\n    var classes = makePseudoClasses(program, properties);\r\n    console.log(' -> Done');\r\n    console.log(' - Writing result');\r\n    var result = makeDTS(classes);\r\n    var resultFileName = fileName.replace(/\\.(t|j)s/i, '') + '.d.ts';\r\n    fs.writeFileSync(path.resolve(callerPath, resultFileName), result);\r\n    console.log(' -> Done');\r\n}\r\ncatch (error) {\r\n    console.log('An error occured.');\r\n    throw error;\r\n}\r\n","dts":{"name":"/media/cyriac/0CC5166B0CC5166B/Work/es5-to-dts/script.d.ts","writeByteOrderMark":false,"text":"export {};\r\n"}}
